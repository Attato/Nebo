import { useState, useEffect } from 'react';

import type { NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import Image from 'next/image';

import Header from 'components/header/header';
import Footer from 'components/footer/footer';

import { motion } from 'framer-motion';

import styles from './movies.module.scss';

const Movies: NextPage = () => {
	// Поиск фильмов
	const [search, setSearch] = useState('');

	// Выпадающий список

	const filterItem = [
		{
			name: 'Cортировка',
			subitems: [{ name: 'по популярности' }, { name: 'по рейтингу' }],
		},
		{
			name: 'Жанры',
			subitems: [{ name: 'Драма' }, { name: 'Ногть' }, { name: 'Верёвка' }],
		},
		{
			name: 'Год выпуска',
			subitems: [
				{ name: '< 2000' },
				{ name: '2000 - 2010' },
				{ name: '2010 - 2020' },
				{ name: '2010 - 2020' },
				{ name: `2020 - ${new Date().getFullYear()}` },
			],
		},
		{
			name: 'Оценка',
			subitems: [{ name: '< 5' }, { name: '5 - 7' }, { name: '7 +' }],
		},
		{
			name: 'Возрастной рейтинг',
			subitems: [
				{ name: '0+' },
				{ name: '12+' },
				{ name: '16+' },
				{ name: '18+' },
			],
		},
	];

	const [isFilterItemOpen, setIsFilterItemOpen] = useState(false);
	const [currentfilterItem, setCurrentFilterItem] = useState(null);

	// Запрос популярных фильмов из TMDB
	const [popularMovies, setPopularMovies] = useState([]);

	const fetchPopularMovies = async () => {
		const data = await fetch(
			'https://api.themoviedb.org/3/movie/popular?api_key=4506fc01a7d9f8d5b35ff79dc50bf10c&language=en-US&page=1'
		);

		const movies = await data.json();
		console.log(movies.results);

		setPopularMovies(movies.results);
	};

	useEffect(() => {
		fetchPopularMovies();
	}, []);

	return (
		<div className="container">
			<Head>
				<title>Фильмы</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<Header />

			<main className={styles.main}>
				<div className={styles.page__wrap}>
					<div className={styles.search}>
						<h4>Шаблоны фильтров</h4>
						<div className={styles.input}>
							<Image
								src="/svg/search.svg"
								width={16}
								height={16}
								alt="svg"
							></Image>
							<input type="text" placeholder="Поиск..." />
						</div>
						<div className={styles.filter}>
							{filterItem.map((item, id) => {
								return (
									<div className={styles.button__wrap}>
										<button
											key={id}
											onClick={() => {
												setIsFilterItemOpen(!isFilterItemOpen);
												currentfilterItem === id
													? setCurrentFilterItem(null)
													: setCurrentFilterItem(id);
											}}
										>
											{currentfilterItem === id ? (
												<Image
													src="/svg/arrow.svg"
													width={16}
													height={16}
													alt="svg"
													style={{ transform: 'rotate(90deg)' }}
												></Image>
											) : (
												<Image
													src="/svg/arrow.svg"
													width={16}
													height={16}
													alt="svg"
												></Image>
											)}
											{item.name}
										</button>

										<div
											className={
												currentfilterItem === id
													? styles.subitems__active
													: styles.subitems
											}
										>
											{item.subitems.map((subitem, id) => {
												return (
													<label key={id}>
														<input type="checkbox" id={subitem.name} />
														{subitem.name}
													</label>
												);
											})}
										</div>
									</div>
								);
							})}
						</div>
					</div>
					<div className={styles.cards__wrap}>
						{popularMovies.map((movie) => {
							return (
								<motion.div
									className={styles.card}
									key={movie.id}
									layout
									animate={{ opacity: 1 }}
									initial={{ opacity: 0 }}
									exit={{ opacity: 0 }}
								>
									<Link href={`/movies/${movie.slug}`}>
										<img
											src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}
											width={220}
											height={180}
											alt="image"
											draggable="false"
										/>
										<h3>
											{movie.vote_average.toFixed(1)} &nbsp; {movie.title}
										</h3>
										<p>{movie.overview}</p>
									</Link>
								</motion.div>
							);
						})}
					</div>
				</div>
			</main>

			<Footer />
		</div>
	);
};

export default Movies;
